diff --git a/CMakeLists.txt b/CMakeLists.txt
index df489e38e..d200789a7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -810,7 +810,10 @@ if(UNIX AND NOT ANDROID)
 	set(WLOG_SYSTEMD_JOURNAL_FEATURE_PURPOSE "systemd journal appender")
 	set(WLOG_SYSTEMD_JOURNAL_FEATURE_DESCRIPTION "allows to export wLog to systemd journal")
 
-	#include(Findlibsystemd)
+	if(WINPR_ONLY)
+		set(WLOG_SYSTEMD_JOURNAL_FEATURE_TYPE "OPTIONAL")
+	endif()
+
 	find_feature(libsystemd ${WLOG_SYSTEMD_JOURNAL_FEATURE_TYPE} ${WLOG_SYSTEMD_JOURNAL_FEATURE_PURPOSE} ${WLOG_SYSTEMD_JOURNAL_FEATURE_DESCRIPTION})
 
 	if(LIBSYSTEMD_FOUND)
@@ -835,6 +838,29 @@ if(ANDROID)
 	set(OPENSLES_FEATURE_TYPE "REQUIRED")
 endif()
 
+if(WINPR_ONLY)
+	set(OPENSSL_FEATURE_TYPE "OPTIONAL")
+	set(MBEDTLS_FEATURE_TYPE "RECOMMENDED")
+	set(X11_FEATURE_TYPE "DISABLED")
+	set(WAYLAND_FEATURE_TYPE "DISABLED")
+	set(DIRECTFB_FEATURE_TYPE "DISABLED")
+	set(GSM_FEATURE_TYPE "DISABLED")
+	set(OSS_FEATURE_TYPE "DISABLED")
+	set(ALSA_FEATURE_TYPE "DISABLED")
+	set(PULSE_FEATURE_TYPE "DISABLED")
+	set(CUPS_FEATURE_TYPE "DISABLED")
+	set(PCSC_FEATURE_TYPE "DISABLED")
+	set(IPP_FEATURE_TYPE "DISABLED")
+	set(FFMPEG_FEATURE_TYPE "DISABLED")
+	set(VAAPI_FEATURE_TYPE "DISABLED")
+	set(JPEG_FEATURE_TYPE "DISABLED")
+	set(X264_FEATURE_TYPE "DISABLED")
+	set(OPENH264_FEATURE_TYPE "DISABLED")
+	set(GSTREAMER_1_0_FEATURE_TYPE "DISABLED")
+	set(GSTREAMER_0_10_FEATURE_TYPE "DISABLED")
+	set(OPENSLES_FEATURE_TYPE "DISABLED")
+endif()
+
 find_feature(X11 ${X11_FEATURE_TYPE} ${X11_FEATURE_PURPOSE} ${X11_FEATURE_DESCRIPTION})
 find_feature(Wayland ${WAYLAND_FEATURE_TYPE} ${WAYLAND_FEATURE_PURPOSE} ${WAYLAND_FEATURE_DESCRIPTION})
 
diff --git a/cmake/ConfigOptions.cmake b/cmake/ConfigOptions.cmake
index f3d2bc856..70f128ebe 100644
--- a/cmake/ConfigOptions.cmake
+++ b/cmake/ConfigOptions.cmake
@@ -13,7 +13,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "sparc")
 	set(TARGET_ARCH "sparc")
 endif()
 
-option(WITH_MANPAGES "Generate manpages." ON)
+option(WITH_MANPAGES "Generate manpages." OFF)
 option(WITH_PROFILER "Compile profiler." OFF)
 option(WITH_GPROF "Compile with GProf profiler." OFF)
 
diff --git a/winpr/CMakeLists.txt b/winpr/CMakeLists.txt
index ef24eb694..8dfcdf653 100644
--- a/winpr/CMakeLists.txt
+++ b/winpr/CMakeLists.txt
@@ -190,14 +190,14 @@ endif()
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
 include_directories(${CMAKE_CURRENT_BINARY_DIR}/include)
 
-add_subdirectory(include)
-
-add_subdirectory(libwinpr)
-
 if(NOT DEFINED WITH_WINPR_TOOLS)
 	set(WITH_WINPR_TOOLS 0)
 endif()
 
+add_subdirectory(include)
+
+add_subdirectory(libwinpr)
+
 if(WITH_WINPR_TOOLS)
 	add_subdirectory(tools)
 endif()
diff --git a/winpr/include/CMakeLists.txt b/winpr/include/CMakeLists.txt
index 452383d0d..67c14c1de 100644
--- a/winpr/include/CMakeLists.txt
+++ b/winpr/include/CMakeLists.txt
@@ -23,4 +23,8 @@ file(GLOB WINPR_HEADERS "winpr/*.h")
 install(FILES ${WINPR_HEADERS} DESTINATION ${WINPR_INSTALL_INCLUDE_DIR} COMPONENT headers)
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/winpr/version.h DESTINATION ${WINPR_INSTALL_INCLUDE_DIR} COMPONENT headers)
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/winpr/wtypes.h DESTINATION ${WINPR_INSTALL_INCLUDE_DIR} COMPONENT headers)
-install(DIRECTORY winpr/tools DESTINATION ${WINPR_INSTALL_INCLUDE_DIR} COMPONENT headers FILES_MATCHING PATTERN "*.h")
+
+if(WITH_WINPR_TOOLS)
+	install(DIRECTORY winpr/tools DESTINATION ${WINPR_INSTALL_INCLUDE_DIR} COMPONENT headers FILES_MATCHING PATTERN "*.h")
+endif()
+
