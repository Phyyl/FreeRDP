diff --git a/CMakeLists.txt b/CMakeLists.txt
index 35e584f3c..e027116cb 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -639,6 +639,10 @@ else()
 	set(WAYLAND_FEATURE_TYPE "DISABLED")
 endif()
 
+if(ANDROID)
+	set(HAVE_MATH_C99_LONG_DOUBLE 0)
+endif()
+
 if(WITH_PCSC_WINPR)
 	find_package(PCSCWinPR)
 endif()
diff --git a/cmake/FindOpenSLES.cmake b/cmake/FindOpenSLES.cmake
index 480e5f163..861488d9c 100644
--- a/cmake/FindOpenSLES.cmake
+++ b/cmake/FindOpenSLES.cmake
@@ -5,28 +5,19 @@
 #  OPENSLES_LIBRARIES   - List of libraries when using dsound.
 #  OPENSLES_FOUND       - True if dsound found.
 
-if(OPENSLES_INCLUDE_DIR)
-	# Already in cache, be silent
-	set(OPENSLES_FIND_QUIETLY TRUE)
-else()
-	find_package(PkgConfig)
-	pkg_check_modules(PC_OPENSLES QUIET OpenSLES)
-endif(OPENSLES_INCLUDE_DIR)
-				
-find_path(OPENSLES_INCLUDE_DIR SLES/OpenSLES.h
-	HINTS ${PC_OPENSLES_INCLUDE_DIR})
+get_property(_FIND_LIBRARY_USE_LIB64_PATHS GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS)
+set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS 1)
 
-find_library(OPENSLES_LIBRARY NAMES OpenSLES
-	HINTS ${PC_OPENSLES_LIBDIR} ${PC_OPENSLES_LIBRARY_DIRS}
-	PATH_SUFFIXES "lib64")
+find_path(OPENSLES_INCLUDE_DIR SLES/OpenSLES.h)
+
+find_library(OPENSLES_LIBRARY NAMES OpenSLES)
 
-# Handle the QUIETLY and REQUIRED arguments and set OPENSL_FOUND to TRUE if
-# all listed variables are TRUE.
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(OPENSLES DEFAULT_MSG
 	OPENSLES_INCLUDE_DIR OPENSLES_LIBRARY)
 						
 if(OPENSLES_FOUND)
+	set(OPENSLES_INCLUDE_DIRS ${OPENSLES_INCLUDE_DIR})
 	set(OPENSLES_LIBRARIES ${OPENSLES_LIBRARY})
 else(OPENSLES_FOUND)
 	if (OpenSLES_FIND_REQUIRED)
@@ -35,3 +26,6 @@ else(OPENSLES_FOUND)
 endif(OPENSLES_FOUND)
 
 mark_as_advanced(OPENSLES_INCLUDE_DIR OPENSLES_LIBRARY)
+
+set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS ${_FIND_LIBRARY_USE_LIB64_PATHS})
+
