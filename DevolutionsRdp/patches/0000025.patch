diff --git a/winpr/libwinpr/environment/environment.c b/winpr/libwinpr/environment/environment.c
index 9eea455a6..84df6b11c 100644
--- a/winpr/libwinpr/environment/environment.c
+++ b/winpr/libwinpr/environment/environment.c
@@ -650,25 +650,54 @@ char** EnvironmentBlockToEnvpA(LPCH lpszEnvironmentBlock)
 
 DWORD GetEnvironmentVariableX(char* lpName, char* lpBuffer, DWORD nSize)
 {
-	WCHAR* lpNameW = NULL;
-	WCHAR* lpBufferW = NULL;
+	int status;
 	DWORD result = 0;
-
-	lpBufferW = calloc(nSize, sizeof(WCHAR));
-
-	if (!lpBufferW)
-		goto cleanup;
+	DWORD nSizeW = 0;
+	LPWSTR lpNameW = NULL;
+	LPWSTR lpBufferW = NULL;
+	LPSTR lpBufferA = lpBuffer;
 
 	if (ConvertToUnicode(CP_UTF8, 0, lpName, -1, &lpNameW, 0) < 1)
 		goto cleanup;
 
-	result = GetEnvironmentVariableW(lpNameW, lpBufferW, nSize);
+	if (!lpBuffer)
+	{
+		char lpBufferMaxA[2048];
+		WCHAR lpBufferMaxW[2048];
 
-	if (result == 0 || result > nSize)
-		goto cleanup;
+		lpBufferA = lpBufferMaxA;
+		lpBufferW = lpBufferMaxW;
+		nSizeW = sizeof(lpBufferMaxW) / 2;
 
-	if (ConvertFromUnicode(CP_UTF8, 0, lpBufferW, -1, &lpBuffer, nSize, NULL, NULL) < 1)
-		result = 0;
+		result = GetEnvironmentVariableW(lpNameW, lpBufferW, nSizeW);
+
+		status = ConvertFromUnicode(CP_UTF8, 0, lpBufferW, -1,
+			&lpBufferA, sizeof(lpBufferMaxA), NULL, NULL);
+
+		if (status > 0)
+			result = (DWORD) status;
+
+		return result;
+	}
+	else
+	{
+		nSizeW = (nSize + 1) * 2;
+		lpBufferW = calloc(1, nSizeW);
+
+		if (!lpBufferW)
+			goto cleanup;
+
+		result = GetEnvironmentVariableW(lpNameW, lpBufferW, nSizeW / 2);
+
+		if (result == 0)
+			goto cleanup;
+
+		status = ConvertFromUnicode(CP_UTF8, 0, lpBufferW, -1,
+			&lpBufferA, nSize, NULL, NULL);
+
+		if (status > 0)
+			result = (DWORD) (status - 1);
+	}
 
 cleanup:
 	free(lpBufferW);
diff --git a/winpr/libwinpr/path/shell.c b/winpr/libwinpr/path/shell.c
index 75fc76b5f..200aa8ae3 100644
--- a/winpr/libwinpr/path/shell.c
+++ b/winpr/libwinpr/path/shell.c
@@ -62,18 +62,22 @@ static char* GetPath_XDG_RUNTIME_DIR(void);
 
 char* GetEnvAlloc(LPCSTR lpName)
 {
-	DWORD length;
+	DWORD nSize;
+	DWORD nStatus;
 	char* env = NULL;
-	length = GetEnvironmentVariableX(lpName, NULL, 0);
 
-	if (length > 0)
+	nSize = GetEnvironmentVariableX(lpName, NULL, 0);
+
+	if (nSize > 0)
 	{
-		env = malloc(length);
+		env = malloc(nSize);
 
 		if (!env)
 			return NULL;
 
-		if (GetEnvironmentVariableX(lpName, env, length) != length - 1)
+		nStatus = GetEnvironmentVariableX(lpName, env, nSize);
+
+		if (nStatus != (nSize - 1))
 		{
 			free(env);
 			return NULL;
@@ -377,6 +381,7 @@ char* GetEnvironmentPath(char* name)
 {
 	char* env = NULL;
 	DWORD nSize;
+	DWORD nStatus;
 	nSize = GetEnvironmentVariableX(name, NULL, 0);
 
 	if (nSize)
@@ -386,7 +391,9 @@ char* GetEnvironmentPath(char* name)
 		if (!env)
 			return NULL;
 
-		if (GetEnvironmentVariableX(name, env, nSize) != nSize - 1)
+		nStatus = GetEnvironmentVariableX(name, env, nSize);
+
+		if (nStatus != (nSize - 1))
 		{
 			free(env);
 			return NULL;
